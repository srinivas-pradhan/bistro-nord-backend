{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "BookATableLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/bistro-nord-backend-dev-bookATable"
      }
    },
    "AwssdkLambdaLayer": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
<<<<<<< Updated upstream
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/bistro-nord-backend/dev/1733431577720-2024-12-05T20:46:17.720Z/awssdk.zip"
=======
          "S3Bucket": "serverless-framework-deployments-us-east-1-5da0ce13-3bc7",
          "S3Key": "serverless/bistro-nord-backend/dev/1733484826848-2024-12-06T11:33:46.848Z/awssdk.zip"
>>>>>>> Stashed changes
        },
        "LayerName": "awssdk",
        "Description": "SDK Layer for AWS Node Package."
      }
    },
    "BookATableLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
<<<<<<< Updated upstream
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/bistro-nord-backend/dev/1733431577720-2024-12-05T20:46:17.720Z/bistro-nord-backend.zip"
=======
          "S3Bucket": "serverless-framework-deployments-us-east-1-5da0ce13-3bc7",
          "S3Key": "serverless/bistro-nord-backend/dev/1733484906817-2024-12-06T11:35:06.817Z/bistro-nord-backend.zip"
>>>>>>> Stashed changes
        },
        "Handler": "src/bookATable/handler.BookATable",
        "Runtime": "nodejs20.x",
        "FunctionName": "bistro-nord-backend-dev-bookATable",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_NAME": "BookATable"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "WriteDynamoDBRole",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "AwssdkLambdaLayer"
          }
        ]
      },
      "DependsOn": [
        "BookATableLogGroup",
        "WriteDynamoDBRole"
      ]
    },
<<<<<<< Updated upstream
    "BookATableLambdaVersionech6TBG0oJcDLS433Ug3XK93BV4ti2Y8abush6W0": {
=======
    "BookATableLambdaVersionCcN4d9Z27ywR7G2sqOQwZnD8lzVoLjz7pHOtTlpqqI": {
>>>>>>> Stashed changes
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "BookATableLambdaFunction"
        },
<<<<<<< Updated upstream
        "CodeSha256": "hJ+awClrFJuXPWZ2GqktNAcq2lYTZ5MsDxFOPfoiuC4="
=======
        "CodeSha256": "cY1qU0f9XVFFI9LEF99/pXos0FXTA9jgXNgMrBEyhEE="
>>>>>>> Stashed changes
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-bistro-nord-backend",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "HttpApiAuthorizerJwtAuthorizer": {
      "Type": "AWS::ApiGatewayV2::Authorizer",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "Name": "JwtAuthorizer",
        "IdentitySource": [
          "$request.header.Authorization"
        ],
        "AuthorizerType": "JWT",
        "JwtConfiguration": {
          "Audience": [
            {
              "Ref": "CognitoUserPoolClient"
            }
          ],
          "Issuer": {
            "Fn::GetAtt": [
              "CognitoUserPool",
              "ProviderURL"
            ]
          }
        }
      }
    },
    "BookATableLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "BookATableLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationBookATable": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "BookATableLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostBookatable": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /bookATable",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationBookATable"
              }
            ]
          ]
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": {
          "Ref": "HttpApiAuthorizerJwtAuthorizer"
        },
        "AuthorizationScopes": [
          "ServerAccessScope/write"
        ]
      },
      "DependsOn": "HttpApiIntegrationBookATable"
    },
    "CognitoUserPool": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "UserPoolName": "Bistro-Nord-UserPool",
        "UsernameAttributes": [
          "email"
        ],
        "AutoVerifiedAttributes": [
          "email"
        ],
        "UserPoolTags": {
          "git": "https://github.com/srinivas-pradhan/bistro-nord-backend",
          "app": "Bistro-Nord"
        }
      }
    },
    "CognitoUserPoolClient": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "ClientName": "Bistro-Nord-UserPool-client",
        "UserPoolId": {
          "Ref": "CognitoUserPool"
        },
        "GenerateSecret": true,
        "ExplicitAuthFlows": [
          "ADMIN_NO_SRP_AUTH"
        ],
        "AllowedOAuthFlows": [
          "client_credentials"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "ServerAccessScope/read",
          "ServerAccessScope/write"
        ],
        "SupportedIdentityProviders": [
          "COGNITO"
        ],
        "CallbackURLs": [
          "https://example.com/signout"
        ]
      }
    },
    "UserPoolDomain": {
      "Type": "AWS::Cognito::UserPoolDomain",
      "Properties": {
        "UserPoolId": {
          "Ref": "CognitoUserPool"
        },
        "Domain": "bistro-nord-backend"
      }
    },
    "UserPoolResourceServer": {
      "Type": "AWS::Cognito::UserPoolResourceServer",
      "Properties": {
        "UserPoolId": {
          "Ref": "CognitoUserPool"
        },
        "Identifier": "ServerAccessScope",
        "Name": "ServerAccessScope",
        "Scopes": [
          {
            "ScopeName": "read",
            "ScopeDescription": "GET Calls SCOPE"
          },
          {
            "ScopeName": "write",
            "ScopeDescription": "POST PUT DELETE Calls SCOPE"
          }
        ]
      }
    },
    "BookATableDynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "BookATable",
        "AttributeDefinitions": [
          {
            "AttributeName": "BookingId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "Datetime",
            "AttributeType": "N"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "BookingId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "Datetime",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 10,
          "WriteCapacityUnits": 10
        },
        "Tags": [
          {
            "Key": "git",
            "Value": "https://github.com/srinivas-pradhan/bistro-nord-backend"
          },
          {
            "Key": "app",
            "Value": "Bistro-Nord"
          }
        ]
      }
    },
    "WriteDynamoDBRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/bistro-nord/bistro-nord-backend/lambda-role/",
        "RoleName": "WriteDynamoDBRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "CloudWatchLogPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn:aws:logs",
                          {
                            "Ref": "AWS::Region"
                          },
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "log-group:/aws/lambda/*:*:*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "WriteDynamoDBPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:BatchGetItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:ConditionCheckItem",
                    "dynamodb:PutItem",
                    "dynamodb:DescribeTable",
                    "dynamodb:DeleteItem",
                    "dynamodb:GetItem",
                    "dynamodb:Scan",
                    "dynamodb:Query",
                    "dynamodb:UpdateItem"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn:aws:dynamodb",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        {
                          "Fn::Join": [
                            "/",
                            [
                              {
                                "Ref": "BookATableDynamoDBTable"
                              }
                            ]
                          ]
                        }
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-us-east-1-5da0ce13-3bc7",
      "Export": {
        "Name": "sls-bistro-nord-backend-dev-ServerlessDeploymentBucketName"
      }
    },
    "AwssdkLambdaLayerQualifiedArn": {
      "Description": "Current Lambda layer version",
      "Value": {
        "Ref": "AwssdkLambdaLayer"
      },
      "Export": {
        "Name": "sls-bistro-nord-backend-dev-AwssdkLambdaLayerQualifiedArn"
      }
    },
    "AwssdkLambdaLayerHash": {
      "Description": "Current Lambda layer hash",
<<<<<<< Updated upstream
      "Value": "5d2e57a1fb287f498a33ec98bb0a8668a4630b0e",
=======
      "Value": "3404e1ce6dd41fed2c56368c97b0b9107c40cbd7",
>>>>>>> Stashed changes
      "Export": {
        "Name": "sls-bistro-nord-backend-dev-AwssdkLambdaLayerHash"
      }
    },
    "AwssdkLambdaLayerS3Key": {
      "Description": "Current Lambda layer S3Key",
<<<<<<< Updated upstream
      "Value": "serverless/bistro-nord-backend/dev/1733431577720-2024-12-05T20:46:17.720Z/awssdk.zip",
=======
      "Value": "serverless/bistro-nord-backend/dev/1733484826848-2024-12-06T11:33:46.848Z/awssdk.zip",
>>>>>>> Stashed changes
      "Export": {
        "Name": "sls-bistro-nord-backend-dev-AwssdkLambdaLayerS3Key"
      }
    },
    "BookATableLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
<<<<<<< Updated upstream
        "Ref": "BookATableLambdaVersionech6TBG0oJcDLS433Ug3XK93BV4ti2Y8abush6W0"
=======
        "Ref": "BookATableLambdaVersionCcN4d9Z27ywR7G2sqOQwZnD8lzVoLjz7pHOtTlpqqI"
>>>>>>> Stashed changes
      },
      "Export": {
        "Name": "sls-bistro-nord-backend-dev-BookATableLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-bistro-nord-backend-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-bistro-nord-backend-dev-HttpApiUrl"
      }
    }
  }
}