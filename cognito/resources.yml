Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties: 
      UserPoolName: ${file(./customvars.yml):serviceName}-${file(./customvars.yml):Cognito}
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      UserPoolTags:
        git : ${file(./customvars.yml):gitrepo}
        app : ${file(./customvars.yml):serviceName}

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: ${file(./customvars.yml):serviceName}-${file(./customvars.yml):Cognito}-client
      AccessTokenValidity: 24
      UserPoolId:
        Ref: CognitoUserPool
      GenerateSecret: ${file(./customvars.yml):CognitoClientSecret}
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
      AllowedOAuthFlows:
        - client_credentials
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes: 
        - ServerAccessScope/read
        - ServerAccessScope/write
      SupportedIdentityProviders:
        - COGNITO
      CallbackURLs:
        - https://example.com/signout

  UserPoolDomain: 
    Type: AWS::Cognito::UserPoolDomain 
    Properties:
      UserPoolId: !Ref CognitoUserPool 
      Domain: ${file(./customvars.yml):project}

  UserPoolResourceServer: 
    Type: AWS::Cognito::UserPoolResourceServer
    Properties: 
      UserPoolId: !Ref CognitoUserPool 
      Identifier: ServerAccessScope 
      Name: "ServerAccessScope" 
      Scopes: 
      - ScopeName: "read" 
        ScopeDescription: "GET Calls SCOPE" 
      - ScopeName: "write"
        ScopeDescription: "POST PUT DELETE Calls SCOPE"
