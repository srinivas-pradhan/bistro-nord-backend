Resources:
  WriteDynamoDBRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /bistro-nord/bistro-nord-backend/lambda-role/
      RoleName: ${file(./customvars.yml):IAM.WriteBookTableRole}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ${file(./customvars.yml):IAM.CloudWatchPolicy}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:TagResource
                Resource:
                  - 'Fn::Join':
                    - ':'
                    -
                      - 'arn:aws:logs'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'log-group:/aws/lambda/*:*:*'
        - PolicyName: ${file(./customvars.yml):IAM.WriteBookTablePolicy}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:    
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:ConditionCheckItem
                  - dynamodb:PutItem
                  - dynamodb:DescribeTable
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource:
                  - 'Fn::Join':
                    - ':'
                    -
                      - 'arn:aws:dynamodb'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'Fn::Join':
                        - '/'
                        -
                          - 'table'
                          - Ref: BookATableDynamoDBTable
                  - 'Fn::Join':
                    - ':'
                    -
                      - 'arn:aws:dynamodb'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'Fn::Join':
                        - '/'
                        -
                          - 'table'
                          - Ref: BookATableDynamoDBTable
                          - 'index'
                          - '*'

  ReadDynamoDBRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /bistro-nord/bistro-nord-backend/lambda-role/
      RoleName: ${file(./customvars.yml):IAM.ReadBookTableRole}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ${file(./customvars.yml):IAM.CloudWatchPolicy}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:TagResource
                Resource:
                  - 'Fn::Join':
                    - ':'
                    -
                      - 'arn:aws:logs'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'log-group:/aws/lambda/*:*:*'
        - PolicyName: ${file(./customvars.yml):IAM.ReadBookTablePolicy}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:    
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:ConditionCheckItem
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource:
                  - 'Fn::Join':
                    - ':'
                    -
                      - 'arn:aws:dynamodb'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'Fn::Join':
                        - '/'
                        -
                          - 'table'
                          - Ref: BookATableDynamoDBTable
                  - 'Fn::Join':
                    - ':'
                    -
                      - 'arn:aws:dynamodb'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'Fn::Join':
                        - '/'
                        -
                          - 'table'
                          - Ref: BookATableDynamoDBTable
                          - 'index'
                          - '*'

  DoneWithATableRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /bistro-nord/bistro-nord-backend/lambda-role/
      RoleName: ${file(./customvars.yml):IAM.DoneWithATableRole}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ${file(./customvars.yml):IAM.CloudWatchPolicy}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:TagResource
                Resource:
                  - 'Fn::Join':
                    - ':'
                    -
                      - 'arn:aws:logs'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'log-group:/aws/lambda/*:*:*'
        - PolicyName: ${file(./customvars.yml):IAM.DoneWithATableReadPolicy}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:    
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:ConditionCheckItem
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource:
                  - 'Fn::Join':
                    - ':'
                    -
                      - 'arn:aws:dynamodb'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'Fn::Join':
                        - '/'
                        -
                          - 'table'
                          - Ref: BookATableDynamoDBTable
                  - 'Fn::Join':
                    - ':'
                    -
                      - 'arn:aws:dynamodb'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'Fn::Join':
                        - '/'
                        -
                          - 'table'
                          - Ref: BookATableDynamoDBTable
                          - 'index'
                          - '*'

        - PolicyName: ${file(./customvars.yml):IAM.DoneWithATableWritePolicy}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:    
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:ConditionCheckItem
                  - dynamodb:PutItem
                  - dynamodb:DescribeTable
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource:
                  - 'Fn::Join':
                    - ':'
                    -
                      - 'arn:aws:dynamodb'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'Fn::Join':
                        - '/'
                        -
                          - 'table'
                          - Ref: DoneWithATableDynamoDBTable
